using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;

namespace Project1
{
    public class Game1 : Game
    {
        private GraphicsDeviceManager _graphics;
        private SpriteBatch _spriteBatch;
        private AnimatedTexture SpriteTexture;

        Vector2 _position;
        private const float Rotation = 0; 
        private const float Scale = 0.5f;
        private const float Depth = 0.5f;

        KeyboardState ks = Keyboard.GetState();
        private KeyboardState _keyboardState;

        int row = 1;

        public Game1()
        {
            _graphics = new GraphicsDeviceManager(this);

            SpriteTexture = new AnimatedTexture(Vector2.Zero, Rotation, Scale, Depth);

            Content.RootDirectory = "Content";
            IsMouseVisible = true;
        }

        protected override void Initialize()
        {
            // TODO: Add your initialization logic here

            _position.X = 50;
            _position.Y = 200;

            base.Initialize();
        }

        protected override void LoadContent()
        {
            _spriteBatch = new SpriteBatch(GraphicsDevice);

            // TODO: use this.Content to load your game content here

            SpriteTexture.Load(Content, "175 Dennie Charsheet", 4, 4, 15);
            
        }

        protected override void Update(GameTime gameTime)
        {
            if (GamePad.GetState(PlayerIndex.One).Buttons.Back == ButtonState.Pressed || Keyboard.GetState().IsKeyDown(Keys.Escape))
                Exit();

            // TODO: Add your update logic here

            float elaped = (float)gameTime.ElapsedGameTime.TotalSeconds;

            _keyboardState = Keyboard.GetState();

            if(_keyboardState.IsKeyDown(Keys.W) || _keyboardState.IsKeyDown(Keys.Up))
            {
                _position.Y -= 2;
                SpriteTexture.UpdateFrame(elaped);
            }
            else if (_keyboardState.IsKeyDown(Keys.A) || _keyboardState.IsKeyDown(Keys.Left))
            {
                _position.X -= 2;
                SpriteTexture.UpdateFrame(elaped);
            }
            else if (_keyboardState.IsKeyDown(Keys.S) || _keyboardState.IsKeyDown(Keys.Down))
            {
                _position.Y += 2;
                SpriteTexture.UpdateFrame(elaped);
            }
            else if (_keyboardState.IsKeyDown(Keys.D) || _keyboardState.IsKeyDown(Keys.Right))
            {
                _position.X += 2;
                SpriteTexture.UpdateFrame(elaped);
            }

            base.Update(gameTime);
        }

        protected override void Draw(GameTime gameTime)
        {
            GraphicsDevice.Clear(Color.CornflowerBlue);

            // TODO: Add your drawing code here

            _spriteBatch.Begin();

            if (_keyboardState.IsKeyDown(Keys.W) || _keyboardState.IsKeyDown(Keys.Up))
            {
                SpriteTexture.DrawFrame(_spriteBatch, _position, row = 4);
            }
            else if (_keyboardState.IsKeyDown(Keys.A) || _keyboardState.IsKeyDown(Keys.Left))
            {
                SpriteTexture.DrawFrame(_spriteBatch, _position, row = 2);
            }
            else if (_keyboardState.IsKeyDown(Keys.S) || _keyboardState.IsKeyDown(Keys.Down))
            {
                SpriteTexture.DrawFrame(_spriteBatch, _position, row = 1);
            }
            else if (_keyboardState.IsKeyDown(Keys.D) || _keyboardState.IsKeyDown(Keys.Right))
            {
                SpriteTexture.DrawFrame(_spriteBatch, _position, row = 3);
            }

            SpriteTexture.DrawFrame(_spriteBatch, _position, row);

            _spriteBatch.End();

            base.Draw(gameTime);
        }
    }
}
